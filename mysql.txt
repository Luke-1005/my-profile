1、索引优化
单表：组合索引时，假如有3个字段做组合索引，在出现范围字段的跳过加索引
双表：左连建右表索引
三表：建被连接的表的索引
总结：永远用小结果集驱动大的结果集
		优先优化nested loop的内层循环
		保证join语句中被驱动表上的join条件字段已经被索引

2、索引失效
全值匹配最好
最佳左前缀，不跳过索引中的列
不要在索引列做任何操作
存储索引不能使用索引右边范围列，（范围之后全失效，范围字段可以用到range）
尽量使用覆盖索引（只访问索引的查询（索引列和查询列一致）），减少select *

Mysql的四种隔离级别
Read Uncommitted（读取未提交内容）--> 脏读
Read Committed（读取提交内容）    --> 不可重复读
Repeatable Read（可重读）   -->幻读
Serializable（可串行化）    -->最高的隔离级别

Mysql各种索引区别：
普通索引：最基本的索引，没有任何限制
唯一索引：与"普通索引"类似，不同的就是：索引列的值必须唯一，但允许有空值。
主键索引：它 是一种特殊的唯一索引，不允许有空值。 
全文索引：仅可用于 MyISAM 表，针对较大的数据，生成全文索引很耗时好空间。
联合索引：为了更多的提高mysql效率可建立组合索引，遵循”最左前缀“原则。创建复合索引时应该将最常用（频率）作限制条件的列放在最左边，依次递减。

联合索引的好处：覆盖索引，这一点是最重要的，众所周知非主键索引会先查到主键索引的值再从主键索引上拿到想要的值。但是覆盖索引可以直接在非主键索引上拿到相应的值，减少一次查询。

ststem > const > eq_ref > ref > range > index > all
子查询为主键查询 > 主键查询只有一条数据的情况 > 唯一性索引> 非唯一线性索引> 检查指定范围行> 查询索引中的所有数据> 查询表中的所有数据
优化级别从左往右递减，没有索引的一般为’all’，需要对type进行优化前提是有索引。

mysql分页查询优化：
1、子查询，查询id SELECT * FROM product WHERE ID > =(select id from product limit 866613, 1) limit 20
2、join id查询 SELECT * FROM product a JOIN (select id from product limit 866613, 20) b ON a.ID = b.id

mysql 主从数据库同步不一致的方法：
忽略；
强制性读写主库；
选择性读写主库；
重启主从复制
